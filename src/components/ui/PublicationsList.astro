---
import { isSkill } from '@/types/cv';
import type { Skill, Publication } from '@/types/cv';
import { highlightAuthor } from '@/lib/utils';

interface Props {
  elements: (Skill | Publication)[];
}

const { elements } = Astro.props;
---

<ul class='space-y-4'>
  {
    elements.map((element, index) => (
      <li class='group p-3 bg-base-200 rounded-lg shadow-sm hover:shadow-md transition-shadow duration-200'>
        {isSkill(element) ? (
          <>
            <h3 class='text-lg font-bold mb-2'>{element.title}</h3>
            <p>{element.description}</p>
          </>
        ) : (
          <div class='flex flex-col'>
            <a
              href={element.link as string}
              class='block hover:text-accent transition-colors duration-200'
              target='_blank'
            >
              <h3 class='text-lg font-bold mb-1'>{element.title}</h3>
            </a>
            <p class='text-sm mb-1'>
              <span class='font-medium'>Authors:</span>{' '}
              <span set:html={highlightAuthor(element.authors as string)} />
            </p>
            <p class='text-xs opacity-75 mb-2'>
              <span class='italic'>{element.journal}</span> â€¢ {element.time}
            </p>
            {element.abstract && (
              <p class='text-xs text-base-content/70'>{element.abstract}</p>
            )}
            {element.link && (
              <div class='flex justify-end mt-2'>
                <a
                  href={element.link}
                  class='btn btn-xs btn-secondary text-secondary-content'
                  target='_blank'
                  rel='noopener noreferrer'
                >
                  Read Paper
                </a>
              </div>
            )}
          </div>
        )}
      </li>
    ))
  }
</ul>
